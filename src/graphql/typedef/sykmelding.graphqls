type Sykmelding {
    id: ID!
    startdatoSykefravar: Date!
    kontaktDato: Date
    navn: String!
    fnr: String!
    lest: Boolean!
    arbeidsgiver: Arbeidsgiver!
    perioder: [Periode!]!
    arbeidsforEtterPeriode: Boolean
    hensynArbeidsplassen: String
    tiltakArbeidsplassen: String
    innspillArbeidsplassen: String
    behandler: Behandler!
}

type Arbeidsgiver {
    navn: String
}

type Behandler {
    navn: String!
    hprNummer: String
    telefon: String
}

interface FomTom {
    fom: Date!
    tom: Date!
}

enum PeriodeEnum {
    AKTIVITET_IKKE_MULIG
    AVVENTENDE
    BEHANDLINGSDAGER
    GRADERT
    REISETILSKUDD
}

union Periode = AktivitetIkkeMulig | Gradert | Behandlingsdager | Reisetilskudd | Avventende

type AktivitetIkkeMulig implements FomTom {
    fom: Date!
    tom: Date!
    type: PeriodeEnum!

    arbeidsrelatertArsak: ArbeidsrelatertArsak
}

type Gradert implements FomTom {
    fom: Date!
    tom: Date!
    type: PeriodeEnum!

    grad: Int!
    reisetilskudd: Boolean!
}

type Behandlingsdager implements FomTom {
    fom: Date!
    tom: Date!
    type: PeriodeEnum!

    behandlingsdager: Int!
}

type Reisetilskudd implements FomTom {
    fom: Date!
    tom: Date!
    type: PeriodeEnum!
}

type Avventende implements FomTom {
    fom: Date!
    tom: Date!
    type: PeriodeEnum!

    tilrettelegging: String
}

enum ArbeidsrelatertArsakEnum {
    MANGLENDE_TILRETTELEGGING
    ANNET
}

type ArbeidsrelatertArsak {
    arsak: [ArbeidsrelatertArsakEnum!]!
    beskrivelse: String
}
