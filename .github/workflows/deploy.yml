name: Build and push
on: push
env:
  branchname: ${{ github.ref_name }}
  NPM_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
jobs:
  snyk-monitor:
    if: github.ref == 'refs/heads/main'
    name: monitor dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: monitor
          args: --org=teamsykmelding --severity-threshold=high
  snyk-test:
    name: analyze dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: test
          args: --org=teamsykmelding --severity-threshold=high
  build:
    name: build and push docker image
    runs-on: ubuntu-latest
    permissions:
      packages: 'write'
      contents: 'read'
      id-token: 'write'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: .yarn/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install yarn dependencies
        run: yarn --immutable
      - name: Lint and TSC
        run: yarn lint && yarn tsc
      - name: Test
        run: yarn test
      - name: Build app
        run: yarn build
      - name: Upload static files to NAV CDN
        uses: navikt/frontend/actions/cdn-upload/v1@main
        with:
          cdn-team-name: teamsykmelding
          source: ./.next/static
          destination: '/dinesykmeldte/_next'
      - name: docker-build-push
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: teamsykmelding
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}

  deploy-to-dev-gcp:
    name: deploy to nais dev
    needs: [snyk-test, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: nais-dev-gcp.yaml
          VAR: image=${{ needs.build.outputs.image }},version=${{ github.sha }}

  deploy-to-dev-demo-gcp:
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/demo')
    name: deploy to nais demo
    needs: [snyk-test, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: nais-dev-demo-gcp.yaml
          VAR: image=${{ needs.build.outputs.image }}

  deploy:
    if: github.ref == 'refs/heads/main'
    name: deploy to nais
    needs: [snyk-test, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          RESOURCE: nais-prod-gcp.yaml
          VAR: image=${{ needs.build.outputs.image }},version=${{ github.sha }}
